// Test generated by RoostGPT for test test2 using AI Type Open AI and AI Model gpt-4

package com.company.internationalizationtaticfilesandresources.service.impl;

import com.company.internationalizationtaticfilesandresources.dto.ResponseMessage;
import com.company.internationalizationtaticfilesandresources.exception.UploadFailedException;
import com.company.internationalizationtaticfilesandresources.service.FileStorageService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.web.multipart.MultipartFile;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class IFileStorageService_upload_3b48639aa2_Test {

    @Mock
    private FileStorageService fileStorageService;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testUploadSuccess() {
        MultipartFile file = new MockMultipartFile("file", "hello.txt", "text/plain", "hello world".getBytes());
        when(fileStorageService.upload(file)).thenReturn(new ResponseMessage("File upload is successful"));

        ResponseMessage response = fileStorageService.upload(file);
        assertEquals("File upload is successful", response.getMessage());
    }

    @Test
    public void testUploadFailure() {
        MultipartFile file = new MockMultipartFile("file", "hello.txt", "text/plain", "hello world".getBytes());
        when(fileStorageService.upload(file)).thenThrow(UploadFailedException.class);

        assertThrows(UploadFailedException.class, () -> fileStorageService.upload(file));
    }
}
