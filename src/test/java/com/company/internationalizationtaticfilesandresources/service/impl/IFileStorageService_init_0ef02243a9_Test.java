// Test generated by RoostGPT for test test2 using AI Type Open AI and AI Model gpt-4

package com.company.internationalizationtaticfilesandresources.service.impl;

import com.company.internationalizationtaticfilesandresources.enums.ExceptionEnum;
import com.company.internationalizationtaticfilesandresources.exception.DeleteFailedException;
import com.company.internationalizationtaticfilesandresources.exception.DownloadFailedException;
import com.company.internationalizationtaticfilesandresources.exception.NotFoundException;
import com.company.internationalizationtaticfilesandresources.exception.UploadFailedException;
import com.company.internationalizationtaticfilesandresources.service.FileStorageService;
import lombok.SneakyThrows;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;
import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Objects;
import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@Slf4j
public class IFileStorageService_init_0ef02243a9_Test {
    private FileStorageService fileStorageService;
    private Path ROOT;

    @BeforeEach
    public void setUp() {
        fileStorageService = mock(FileStorageService.class);
        ROOT = Paths.get("testDirectory");
    }

    @Test
    public void testInitSuccess() {
        doNothing().when(fileStorageService).init();
        fileStorageService.init();
        verify(fileStorageService, times(1)).init();
    }

    @Test
    public void testInitFailure() {
        doThrow(new RuntimeException()).when(fileStorageService).init();
        Exception exception = assertThrows(RuntimeException.class, () -> fileStorageService.init());
        assertEquals(ExceptionEnum.DIRECTORY_CREATED_FAILED.name(), exception.getMessage());
    }
}
