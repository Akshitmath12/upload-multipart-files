// Test generated by RoostGPT for test test2 using AI Type Open AI and AI Model gpt-4

package com.company.internationalizationtaticfilesandresources.service.impl;

import com.company.internationalizationtaticfilesandresources.dto.ResponseMessage;
import com.company.internationalizationtaticfilesandresources.enums.ExceptionEnum;
import com.company.internationalizationtaticfilesandresources.enums.SuccessMessageEnum;
import com.company.internationalizationtaticfilesandresources.exception.DeleteFailedException;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class IFileStorageService_delete_582328788e_Test {

    @Mock
    private Files files;

    private FileStorageService fileStorageService;

    @Before
    public void setUp() {
        fileStorageService = new FileStorageService(files);
    }

    @Test
    public void testDeleteFileSuccess() {
        String fileName = "test.txt";
        Path path = Paths.get(fileName);
        when(files.deleteIfExists(path)).thenReturn(true);

        ResponseMessage response = fileStorageService.delete(fileName);

        assertEquals(SuccessMessageEnum.DELETE_SUCCESSFULLY.name(), response.getMessage().toString());
    }

    @Test(expected = DeleteFailedException.class)
    public void testDeleteFileFailure() {
        String fileName = "test.txt";
        Path path = Paths.get(fileName);
        when(files.deleteIfExists(path)).thenReturn(false);

        fileStorageService.delete(fileName);
    }
}
