// Test generated by RoostGPT for test uploadmultipartfile using AI Type Open AI and AI Model gpt-4

package com.company.internationalizationtaticfilesandresources.controller;

import com.company.internationalizationtaticfilesandresources.service.FileStorageService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.ResponseEntity;
import java.nio.file.Path;
import java.util.stream.Stream;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class FileController_getFile_08419cab74_Test {

    @InjectMocks
    private FileController fileController;

    @Mock
    private FileStorageService fileStorageService;

    private Stream<Path> fileStream;

    @BeforeEach
    public void setup() {
        fileStream = Stream.of(Path.of("testFile1.txt"), Path.of("testFile2.txt"));
        when(fileStorageService.getFilesStream()).thenReturn(fileStream);
    }

    @Test
    public void testGetFile_Success() {
        ResponseEntity<Stream<Path>> response = fileController.getFile();
        assertEquals(200, response.getStatusCodeValue());
        assertEquals(fileStream, response.getBody());
    }

    @Test
    public void testGetFile_Failure() {
        when(fileStorageService.getFilesStream()).thenReturn(null);
        ResponseEntity<Stream<Path>> response = fileController.getFile();
        assertEquals(200, response.getStatusCodeValue());
        assertEquals(null, response.getBody());
    }
}
