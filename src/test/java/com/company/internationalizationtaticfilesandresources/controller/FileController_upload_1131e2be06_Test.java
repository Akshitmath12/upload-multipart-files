// Test generated by RoostGPT for test test2 using AI Type Open AI and AI Model gpt-4

package com.company.internationalizationtaticfilesandresources.controller;

import com.company.internationalizationtaticfilesandresources.dto.ResponseMessage;
import com.company.internationalizationtaticfilesandresources.service.FileStorageService;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.web.multipart.MultipartFile;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.when;

@RunWith(SpringRunner.class)
public class FileController_upload_1131e2be06_Test {

    private FileController fileController;

    @Mock
    private FileStorageService fileStorageService;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        fileController = new FileController(fileStorageService);
    }

    @Test
    public void testUploadSuccess() {
        MultipartFile file = new MockMultipartFile("data", "filename.txt", "text/plain", "some xml".getBytes());
        ResponseMessage responseMessage = new ResponseMessage("Upload successful");
        when(fileStorageService.upload(file)).thenReturn(responseMessage);

        ResponseEntity<ResponseMessage> responseEntity = fileController.upload(file);

        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertEquals(responseMessage, responseEntity.getBody());
    }

    @Test
    public void testUploadFailure() {
        MultipartFile file = new MockMultipartFile("data", "filename.txt", "text/plain", "some xml".getBytes());
        ResponseMessage responseMessage = new ResponseMessage("Upload failed");
        when(fileStorageService.upload(file)).thenReturn(responseMessage);

        ResponseEntity<ResponseMessage> responseEntity = fileController.upload(file);

        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertEquals(responseMessage, responseEntity.getBody());
    }
}
